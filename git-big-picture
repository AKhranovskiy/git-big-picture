#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (C) 2010 Sebastian Pipping <sebastian@pipping.org>
# Copyright (C) 2010 Julius Plenz <julius@plenz.com>
# Copyright (C) 2010 Valentin Haenel <valentin.haenel@gmx.de>
# Licensed under GPL v3 or later

import sys
from optparse import OptionParser
import subprocess
from git_big_picture.main import VERSION, main


_USAGE = '\n  %prog  [-f <format> [-v <viewer>]]  [<.git-directory>]'

parser = OptionParser(usage=_USAGE, version=VERSION)

parser.add_option('-a', '--all', action='store_true', dest='all_commits',
	help='include all commits (not just tags and branch heads)')
parser.add_option('--some', action='store_true', dest='some_commits',
	help='include all commits but linear runs')
parser.add_option('-f', '--format', action='store', type='string', dest='format',
	metavar='FMT', help='set output format [svg, png, ps, pdf, ...]')
parser.add_option('-o', '--out', action='store', type='string', dest='outfile',
	metavar='FILE', help='write image to specified file')
parser.add_option('-v', '--viewer', action='store', type='string', dest='viewer',
	metavar='CMD', help='write image to tempfile and start specified viewer')
parser.add_option('--pstats', action='store', type='string', dest='pstats_outfile',
	metavar='FILE', help='run cProfile profiler writing pstats output to FILE')

opts, args = parser.parse_args()


if len(args) > 1:
	parser.print_usage()
	sys.exit(1)
elif len(args) == 1:
	# check whether the argument is a valid git directory
	p = subprocess.Popen(['git', 'rev-parse', '--git-dir'],
		stdout=subprocess.PIPE, stderr=subprocess.PIPE, env={'GIT_DIR': args[0]})
	p.wait()
	if p.returncode:
		sys.stderr.write('Fatal: Does not appear to be a .git directory: %s.\n' % args[0])
		sys.exit(1)
	else:
		git_env = {'GIT_DIR': args[0]}


if opts.pstats_outfile is not None:
	import cProfile
	cProfile.run('main(opts)', opts.pstats_outfile)
else:
	main(opts, git_env)


# vim: set noexpandtab:
